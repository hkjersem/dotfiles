# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set the theme.
ZSH_THEME="agnoster"

# Change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=100

# Enable command auto-correction.
ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Fix history
HISTFILE="$HOME/.zsh_history"
HIST_STAMPS="dd.mm.yyyy"
HISTSIZE=100000
SAVEHIST=$HISTSIZE
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_SAVE_NO_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

# Load plugins
plugins=(git ssh-agent zsh-syntax-highlighting zsh-autosuggestions history-substring-search)

# User configuration
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

# Composer
export PATH="$HOME/.composer/vendor/bin:$PATH"

# Homebrew
export PATH=/opt/homebrew/bin:$PATH

# Set language environment
export LANG=en_US.UTF-8
export LC_ALL=en_US.utf-8

# Give detailed report for all commands taking more than 5 seconds
export REPORTTIME=5
export TIMEFMT='
> %J

  | Time:   [38;5;159m%*E[0m total time, %U user time, %S kernel time
  | Disk:   [38;5;159m%F[0m major page faults (pages loaded from disk)
  | System: [38;5;159m%P[0m CPU used, [38;5;159m%M[0m KB max memory used'

autoload -U colors && colors

# ssh
if [ -f ~/.ssh/id_rsa ]; then
  export SSH_KEY_PATH="~/.ssh/id_rsa"
  zstyle :omz:plugins:ssh-agent agent-forwarding on
  zstyle :omz:plugins:ssh-agent identities id_rsa
fi

# Set personal aliases, overriding those provided by oh-my-zsh libs, plugins, and themes.
source ~/.aliases

source $ZSH/oh-my-zsh.sh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

prompt_context() {
  if [[ "$USER" != "$DEFAULT_USER" || -n "$SSH_CLIENT" ]]; then
    prompt_segment black default "%(!.%{%F{yellow}%}.)%T"
  fi
}

# Local overriding
if [ -f ~/.zshrc_local ]; then
	source ~/.zshrc_local
fi

# Load nvm bash_completion
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Calling nvm use automatically in a directory with a .nvmrc file
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc